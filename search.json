[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "myblog",
    "section": "",
    "text": "Exploratory data analysis\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n  \n\n\n\n\nPost With Code\n\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nJul 31, 2023\n\n\nHarlow Malloc\n\n\n\n\n\n\n  \n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\n\n\nJul 28, 2023\n\n\nTristan O’Malley\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code."
  },
  {
    "objectID": "posts/Topics.html",
    "href": "posts/Topics.html",
    "title": "Exploratory data analysis",
    "section": "",
    "text": "import classics CSV file as a dataframe\n\n\nimport pandas as pd\n\nfile_path = 'classics.csv'\n\n# Read the CSV file into a pandas DataFrame\ndf = pd.read_csv(file_path)\n\n# Check if the file is loaded sucessfully\ndf.head()\n\n\n\n\n\n\n\n\nbibliography.congress classifications\nbibliography.languages\nbibliography.subjects\nbibliography.title\nbibliography.type\nmetadata.downloads\nmetadata.id\nmetadata.rank\nmetadata.url\nbibliography.author.birth\n...\nmetrics.sentiments.polarity\nmetrics.sentiments.subjectivity\nmetrics.statistics.average letter per word\nmetrics.statistics.average sentence length\nmetrics.statistics.average sentence per word\nmetrics.statistics.characters\nmetrics.statistics.polysyllables\nmetrics.statistics.sentences\nmetrics.statistics.syllables\nmetrics.statistics.words\n\n\n\n\n0\nPR\nen\nSisters -- Fiction,Courtship -- Fiction,Social...\nPride and Prejudice\nText\n36576\n1342\n1\nhttps://www.gutenberg.org/ebooks/1342\n1775\n...\n0.136713\n0.522239\n4.83\n18.0\n0.05\n586794\n4603\n6511\n170648.1\n121533\n\n\n1\nPS\nen\nMentally ill women -- Fiction,Feminist fiction...\nThe Yellow Wallpaper\nText\n26363\n1952\n2\nhttps://www.gutenberg.org/ebooks/1952\n1860\n...\n0.054174\n0.534787\n4.41\n15.0\n0.06\n26769\n102\n385\n7686.9\n6067\n\n\n2\nPZ,PR\nen\nFantasy\nAlice's Adventures in Wonderland\nText\n18882\n11\n3\nhttps://www.gutenberg.org/ebooks/11\n1832\n...\n0.041079\n0.497276\n4.65\n17.0\n0.06\n122719\n339\n1501\n33810.3\n26389\n\n\n3\nPR\nen\nMonsters -- Fiction;Frankenstein's monster (Fi...\nFrankenstein; Or, The Modern Prometheus\nText\n17128\n84\n4\nhttps://www.gutenberg.org/ebooks/84\n1797\n...\n0.100902\n0.539516\n4.77\n23.0\n0.04\n357604\n2604\n3239\n106802.1\n74959\n\n\n4\nPT\nen\nPsychological fiction,Metamorphosis -- Fiction\nMetamorphosis\nText\n15683\n5200\n5\nhttps://www.gutenberg.org/ebooks/5200\n1883\n...\n0.041997\n0.479019\n4.56\n27.0\n0.04\n100372\n397\n800\n28752.3\n22022\n\n\n\n\n5 rows × 38 columns\n\n\n\n\n\ncheck missing data\n\nmissing_data = df.isnull().sum()\n\nprint(missing_data)\n\nbibliography.congress classifications              159\nbibliography.languages                               0\nbibliography.subjects                              155\nbibliography.title                                   0\nbibliography.type                                    0\nmetadata.downloads                                   0\nmetadata.id                                          0\nmetadata.rank                                        0\nmetadata.url                                         0\nbibliography.author.birth                            0\nbibliography.author.death                            0\nbibliography.author.name                             0\nbibliography.publication.day                         0\nbibliography.publication.full                        0\nbibliography.publication.month                       0\nbibliography.publication.month name                  0\nbibliography.publication.year                        0\nmetadata.formats.total                               0\nmetadata.formats.types                               0\nmetrics.difficulty.automated readability index       0\nmetrics.difficulty.coleman liau index                0\nmetrics.difficulty.dale chall readability score      0\nmetrics.difficulty.difficult words                   0\nmetrics.difficulty.flesch kincaid grade              0\nmetrics.difficulty.flesch reading ease               0\nmetrics.difficulty.gunning fog                       0\nmetrics.difficulty.linsear write formula             0\nmetrics.difficulty.smog index                        0\nmetrics.sentiments.polarity                          0\nmetrics.sentiments.subjectivity                      0\nmetrics.statistics.average letter per word           0\nmetrics.statistics.average sentence length           0\nmetrics.statistics.average sentence per word         0\nmetrics.statistics.characters                        0\nmetrics.statistics.polysyllables                     0\nmetrics.statistics.sentences                         0\nmetrics.statistics.syllables                         0\nmetrics.statistics.words                             0\ndtype: int64\n\n\nWe see 159 missing data in “bibliography.congress classifications” column and 155 in “bibliography.subjects” colum.\nHow many authors are in the dataset?\n\nlen(df[\"bibliography.author.name\"].unique())\n\n555\n\n\nThere are 555 authors in this dataset.\nNumber of publications in each year?\nBy making the number of bins equal to the number of total unique value, we get a histogram like this:\n\nimport matplotlib.pyplot as plt\n\ndt1 = df[\"bibliography.publication.year\"]\n\n# Create a histogram\nplt.hist(dt1, bins= len(df[\"bibliography.publication.year\"].unique()), edgecolor='black')\n\n# Add labels and title\nplt.xlabel('Value')\nplt.ylabel('Frequency')\nplt.title('Histogram Example')\n\n# Show the plot\nplt.show()\n\n\n\n\nWe see the publication year is highly skewed to the left, where we observe most of books in this dataset are published in late 20th centery or after 2000s. In other words, most of them are published in recent 30 years.\nRelationship between number of difficul words and reading ease (metrics.difficulty.flesch reading ease)?\n\nimport numpy as np\nfrom sklearn.linear_model import LinearRegression\n\nx = df[\"metrics.difficulty.difficult words\"]\ny = df[\"metrics.difficulty.flesch reading ease\"]\n\nx = [xi for xi in x if xi &lt; 10000]\ny = [y[i] for i, xi in enumerate(x) if xi &lt; 10000]\n# Create a scatter plot\nplt.scatter(x, y)\n\n\n# Add labels and title\nplt.xlabel('# of difficult words')\nplt.ylabel('flesch reading ease')\nplt.title('Scatter Plot Example')\n\nlm = LinearRegression()\nx = np.array(filtered_x).reshape(-1, 1)\ny = np.array(filtered_y).reshape(-1, 1)\nlm.fit(x,y )\n\n# Get the coefficients of the linear model\nslope = lm.coef_[0]\nintercept = lm.intercept_\nplt.plot(x, slope * x + intercept, color='red', label='Regression Line')\n\n# Show the plot\nplt.show()\n\n\n\n\n\nslope\n\narray([-0.00131749])\n\n\nThe slope is -0.00131749, which says there isn’t an obvious negative relation between number of difficult words and flesch reading ease. This contradicts to my expectation, that there must be a obvious negative relationship bewteen this two variables.\n\ndt = df[\"metrics.sentiments.polarity\"]\n\n# Create a histogram\nplt.hist(dt, bins= len(df[\"metrics.sentiments.polarity\"].unique()), edgecolor='black')\n\n# Add labels and title\nplt.xlabel('Value')\nplt.ylabel('Frequency')\nplt.title('Histogram Example')\n\n# Show the plot\nplt.show()\n\n\n\n\nSentiments polarity shows to center around 0.1 with a seemingly normal distribution.\n\ndt = df[\"metrics.statistics.average sentence length\"]\n\n# Create a histogram\nplt.hist(dt, bins= len(df[\"metrics.statistics.average sentence length\"].unique()), edgecolor='black')\n\n# Add labels and title\nplt.xlabel('Value')\nplt.ylabel('Frequency')\nplt.title('Histogram Example')\n\n# Show the plot\nplt.show()\n\n\n\n\nMajority of sentence length stay between 0 and 50 with a center around 30 (words)."
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  }
]